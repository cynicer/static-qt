name: Build Static Qt (Windows)

on:
  workflow_dispatch:
    inputs:
      qt_version:
        description: 'Qt version (e.g., 5.15.2)'
        required: true
        default: '5.15.2'
      openssl_version:
        description: 'OpenSSL version (e.g., 1.1.1u)'
        required: true
        default: '1.1.1u'
      vulkan_sdk_version:
        description: 'Vulkan SDK version (e.g., 1.3.261.1)'
        required: true
        default: '1.3.261.1'

jobs:
  build-qt:
    runs-on: windows-latest

    env:
      QT_VERSION: ${{ inputs.qt_version }}
      OPENSSL_VERSION: ${{ inputs.openssl_version }}
      VULKAN_SDK_VERSION: ${{ inputs.vulkan_sdk_version }}
      VULKAN_SDK_DIR: C:\VulkanSDK\${{ inputs.vulkan_sdk_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          choco install -y strawberryperl winflexbison ninja 7zip

      - name: Download Qt Source
        run: |
          curl -LO https://download.qt.io/archive/qt/${{ env.QT_VERSION }}/$QT_VERSION/single/qt-everywhere-src-${{ env.QT_VERSION }}.zip
          7z x qt-everywhere-src-${{ env.QT_VERSION }}.zip -y > nul

      - name: Download and Extract OpenSSL (prebuilt)
        run: |
          curl -LO https://slproweb.com/download/Win64OpenSSL-${{ env.OPENSSL_VERSION }}.exe
          Start-Process -Wait -FilePath Win64OpenSSL-${{ env.OPENSSL_VERSION }}.exe -ArgumentList "/silent", "/verysilent", "/sp-", "/suppressmsgboxes", "/DIR=C:\OpenSSL"

      - name: Download and Setup Vulkan SDK
        run: |
          curl -LO https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_SDK_VERSION }}-Installer.exe?Human=true -o vulkan_installer.exe
          Start-Process -Wait -FilePath vulkan_installer.exe -ArgumentList "/S", "/D=${{ env.VULKAN_SDK_DIR }}"

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure Qt (static with OpenSSL + Vulkan)
        run: |
          cd qt-everywhere-src-${{ env.QT_VERSION }}
          set OPENSSL_DIR=C:\OpenSSL
          set OPENSSL_LIBS=-llibssl -llibcrypto
          set INCLUDE=%OPENSSL_DIR%\include;%INCLUDE%
          set LIB=%OPENSSL_DIR%\lib;%LIB%
          set PATH=%OPENSSL_DIR%\bin;%PATH%
          set VULKAN_SDK=${{ env.VULKAN_SDK_DIR }}
          set INCLUDE=%VULKAN_SDK%\Include;%INCLUDE%
          set LIB=%VULKAN_SDK%\Lib;%LIB%
          cmd /c "configure.bat -static -release -platform win32-msvc ^
            -opensource -confirm-license -prefix %CD%\qt-static ^
            -qt-zlib -qt-libpng -qt-libjpeg -qt-webp -qt-freetype ^
            -openssl-linked ^
            -I %OPENSSL_DIR%\include -L %OPENSSL_DIR%\lib ^
            -I %VULKAN_SDK%\Include -L %VULKAN_SDK%\Lib ^
            -no-opengl -make libs -nomake tools -nomake examples -nomake tests ^
            -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity ^
            -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtlocation ^
            -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing ^
            -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline ^
            -skip qtremoteobjects -skip qtscript -skip qtsensors -skip qtspeech -skip qtsvg -skip qtwayland ^
            -skip qtwebglplugin -skip qtwebview -skip webengine"

      - name: Build and install Qt
        run: |
          cd qt-everywhere-src-${{ env.QT_VERSION }}
          nmake
          nmake install

      - name: Package Qt
        run: |
          cd qt-everywhere-src-${{ env.QT_VERSION }}
          7z a -tzip qt-static.zip .\qt-static\*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qt-static-win
          path: qt-everywhere-src-${{ env.QT_VERSION }}/qt-static.zip
