name: Build Static Qt (Windows)

on:
  workflow_dispatch:
    inputs:
      qt_version:
        description: 'Qt version (e.g., 6.9.1)'
        required: true
        default: '6.9.1'
      openssl_version:
        description: 'OpenSSL version (e.g., 3_5_1)'
        required: true
        default: '3_5_1'

jobs:
  build-qt:
    runs-on: windows

    env:
      QT_VERSION: ${{ inputs.qt_version }}
      OPENSSL_VERSION: ${{ inputs.openssl_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          choco install -y strawberryperl winflexbison ninja 7zip

      - name: Download Qt Source
        shell: bash
        run: |
          QT_MINOR_VERSION=$(echo "${{ env.QT_VERSION }}" | cut -d. -f1,2)
          echo "QT_MINOR_VERSION=$QT_MINOR_VERSION" >> $GITHUB_ENV
          curl -LO https://download.qt.io/official_releases/qt/$QT_MINOR_VERSION/${{ env.QT_VERSION }}/single/qt-everywhere-src-${{ env.QT_VERSION }}.zip
          7z x qt-everywhere-src-${{ env.QT_VERSION }}.zip -y > /dev/null

      - name: Download and Extract OpenSSL (prebuilt)
        run: |
          curl -LO https://slproweb.com/download/Win64OpenSSL-${{ env.OPENSSL_VERSION }}.exe
          Start-Process -Wait -FilePath Win64OpenSSL-${{ env.OPENSSL_VERSION }}.exe -ArgumentList "/silent", "/verysilent", "/sp-", "/suppressmsgboxes", "/DIR=C:\OpenSSL"

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure Qt with CMake (static + OpenSSL)
        shell: bash
        run: |
          mkdir ${{ env.QT_VERSION }}
          mkdir "${{ env.QT_VERSION }}-build"
          cd "${{ env.QT_VERSION }}-build"
          ../qt-everywhere-src-${{ env.QT_VERSION }}/configure -static -release -platform win32-msvc \
            -opensource -confirm-license -prefix "../${{ env.QT_VERSION }}" \
            -skip qtwebengine \
            -openssl-linked -I "C:/OpenSSL/include" -L "C:/OpenSSL/lib" \
            -feature-relocatable -nomake examples -nomake tests

      - name: Build and install Qt
        shell: bash
        run: |
          cd "${{ env.QT_VERSION }}-build"
          cmake --build . --parallel
          cmake --install .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.QT_VERSION }}-qt-static-win
          path: ${{ env.QT_VERSION }}
