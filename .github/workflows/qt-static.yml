name: Build Static Qt (Windows)

on:
  workflow_dispatch:
    inputs:
      qt_version:
        description: 'Qt version (e.g., 6.9.1)'
        required: true
        default: '6.9.1'
      openssl_version:
        description: 'OpenSSL version (e.g., 3_5_1)'
        required: true
        default: '3_5_1'
      vulkan_sdk_version:
        description: 'Vulkan SDK version (e.g., 1.4.321.1)'
        required: true
        default: '1.4.321.1'

jobs:
  build-qt:
    runs-on: windows-latest

    env:
      QT_VERSION: ${{ inputs.qt_version }}
      OPENSSL_VERSION: ${{ inputs.openssl_version }}
      VULKAN_SDK_VERSION: ${{ inputs.vulkan_sdk_version }}
      VULKAN_SDK_DIR: C:\VulkanSDK\${{ inputs.vulkan_sdk_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          choco install -y strawberryperl winflexbison ninja 7zip

      - name: Download Qt Source
        shell: bash
        run: |
          QT_MINOR_VERSION=$(echo "${{ env.QT_VERSION }}" | cut -d. -f1,2)
          echo "QT_MINOR_VERSION=$QT_MINOR_VERSION" >> $GITHUB_ENV
          curl -LO https://download.qt.io/official_releases/qt/$QT_MINOR_VERSION/${{ env.QT_VERSION }}/single/qt-everywhere-src-${{ env.QT_VERSION }}.zip
          7z x qt-everywhere-src-${{ env.QT_VERSION }}.zip -y > /dev/null

      - name: Download and Extract OpenSSL (prebuilt)
        run: |
          curl -LO https://slproweb.com/download/Win64OpenSSL-${{ env.OPENSSL_VERSION }}.exe
          Start-Process -Wait -FilePath Win64OpenSSL-${{ env.OPENSSL_VERSION }}.exe -ArgumentList "/silent", "/verysilent", "/sp-", "/suppressmsgboxes", "/DIR=C:\OpenSSL"

      - name: Download and Setup Vulkan SDK
        run: |
          curl -L -o vulkan_installer.exe https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}/windows/vulkansdk-windows-X64-${{ env.VULKAN_SDK_VERSION }}.exe          
          Start-Process -Wait -FilePath ".\vulkan_installer.exe" -ArgumentList "--root", "{{ env.VULKAN_SDK_DIR }}", "--accept-licenses", "--default-answer", "--confirm-command", "install"
          
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure Qt with CMake (static + OpenSSL + Vulkan)
        shell: bash
        run: |
          #export VULKAN_SDK="${{ env.VULKAN_SDK_DIR }}"
          #export PATH="$VULKAN_SDK\\Bin:$PATH"
          #export INCLUDE="$VULKAN_SDK\\Include;$INCLUDE"
          #export LIB="$VULKAN_SDK\\Lib;$LIB"
      
          cd qt-everywhere-src-${{ env.QT_VERSION }}
          #mkdir -p build && cd build
      
          echo "Vulkan SDK: ${VULKAN_SDK}"

          #cmd /c "configure.bat -static -release -platform win32-msvc -opensource -confirm-license -prefix %CD%\qt-static -qt-zlib -qt-libpng -qt-webp -qt-libjpeg -qt-freetype -no-opengl -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtsensors -skip qtspeech -skip qtsvg -skip qtwayland -skip qtwebglplugin -skip qtwebview -skip webengine -make libs -nomake tools -nomake examples -nomake tests"

          ./configure -static -release -platform win32-msvc \
            -opensource -confirm-license -prefix "$(pwd -W)/qt-static" \
            -qt-zlib -qt-libpng -qt-webp -qt-libjpeg -qt-freetype -no-opengl -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtlocation -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects -skip qtscript -skip qtsensors -skip qtspeech -skip qtsvg -skip qtwayland -skip qtwebglplugin -skip qtwebview -skip webengine -skip qtgraphs -skip qtmqtt -skip qtopcua \
            -nomake examples -nomake tests 

      - name: Build and install Qt
        shell: bash
        run: |
          cd qt-everywhere-src-${{ env.QT_VERSION }}
          cmake --build . --parallel
          cmake --install .

      - name: Package Qt
        run: |
          cd qt-everywhere-src-${{ env.QT_VERSION }}
          7z a -tzip qt-static.zip .\qt-static\*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qt-static-win
          path: qt-everywhere-src-${{ env.QT_VERSION }}/qt-static.zip
